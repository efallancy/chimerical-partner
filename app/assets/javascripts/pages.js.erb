var renderNewsFeedComponent = function( data ) {
  var totalItems = data.num_results;
  var results = data.results;

  var news_list = $( "#newslist" );
  news_list.html( "" ); // Start with clean slate whenever new feeds being request

  for( var index = 0; index < totalItems; index++ ) {
    // Append the news details
    var newsContainer = $( "<div></div>" ).addClass( "news-content" );
    var newsHeadline = $( "<p></p>" ).addClass( "news-headline" );
    var newsAbstract = $( "<p></p>" ).addClass( "news-abstract" );
    var newsByline = $( "<p></p>" ).addClass( "news-author" );

    newsHeadline.html( results[ index ].title );
    newsAbstract.html( results[ index ].abstract );
    newsByline.html( results[ index ].byline );

    newsContainer.attr( "data-url", results[ index ].url );
    newsContainer.css( "width", "100%" );

    newsContainer.append( newsHeadline );
    newsContainer.append( newsAbstract );
    newsContainer.append( newsByline );
    newsContainer.on( "click", function () {
      renderNewsDetails( $( this ).attr( "data-url" ) );
    } );

    news_list.append( newsContainer );
  }
};

var renderNewsDetails = function( url ) {
  var iframe = $( "<iframe></iframe>" ).attr( {
                                                "src": url,
                                                "width": "100%",
                                                "height": "100%",
                                                "frameborder": "0",
                                                "allowtransparency": "true"
                                              } );

  var fallbackLinkAnchor = $( "<a></a>" ).attr( "href", url ).html( "Click here for full article" );
  var fallbackLinkDOM = $( "<p></p>" ).append( fallbackLinkAnchor );

  var newsDetailsSection = $( "#news-details" );
  newsDetailsSection.html( iframe );
};


var renderNewsFeed = function ( category ) {

  var url = "/fetch_news";


  $.ajax( {
    url: url,
    method: "GET",
    dataType: "JSON",
    data: {
      "category": category
    },
    success: function ( response ) {
      // Clear the iframe panel
      $( "#news-details" ).html( "" );

      // Rerender the quote
      renderQuote();

      // Render the news component
      renderNewsFeedComponent( response );
    }
  }).done( function () { console.log( "News request sent!" ) } );

};


var setNewsFeedListener = function () {
  // When selecting category
  $( "select" ).on( "change", function () {
    var selected = $( this ).val();

    renderNewsFeed( selected );
  } );

  // When clicking on the articles
  $( ".news-content").on( "click", function () {
    renderNewsDetails( $( this ).attr( "data-url" ) );
  } );

};

var renderWeatherComponent = function( response ) {

  var iconImg = {
                  "clear-day": '<%= image_path( "weather/Sun.svg" )%>',
                  "clear-night": '<%= image_path( "weather/Moon.svg" )%>',
                  "rain": '<%= image_path( "weather/Cloud-Rain.svg" )%>',
                  "snow": '<%= image_path( "weather/Snowflake.svg" )%>',
                  "sleet": '<%= image_path( "weather/Snowflake.svg" )%>',
                  "wind": '<%= image_path( "weather/Wind.svg" )%>',
                  "fog": '<%= image_path( "weather/Cloud-Fog.svg" )%>',
                  "cloudy": '<%= image_path( "weather/Cloud.svg" )%>',
                  "partly-cloudy-day": '<%= image_path( "weather/Cloud-Sun.svg" )%>',
                  "partly-cloudy-night": '<%= image_path( "weather/Cloud-Moon.svg" )%>',
                  "hail": '<%= image_path( "weather/Cloud-Hail.svg" )%>',
                  "thunderstorm": '<%= image_path( "weather/Cloud-Lightning.svg" )%>',
                  "tornado": '<%= image_path( "weather/Tornado.svg" )%>'
                };

  // Get the weather icon div
  var icon = $( "<img>" ).attr( "src", iconImg[ response[ "currently" ][ "icon" ] ] );
  $( ".weather-icon" ).html( icon );

  // Get the temperature div
  var tempWrapper = $( "<div></div>" ).addClass( "pure-g" );
  tempWrapper.addClass( "weather-info-temp-wrapper" );

  var imageRefreshDiv = $( "<div></div>" ).addClass( "weather-refresh" );
  imageRefreshDiv.addClass( "pure-u-1-2" );
  var imageRefresh = $( "<img>" ).attr( {
                        "src": '<%= image_path( "weather/Cloud-Refresh.svg" ) %>',
                        "alt": "refresh",
                        "title": "Show current weather"
                      } );

  imageRefresh.on( "click" , function () { renderWeather(); } );
  imageRefreshDiv.append( imageRefresh );

  var tempDiv = $( "<div></div>" ).addClass( "weather-temp" );
  tempDiv.addClass( "pure-u-1-2" );
  tempDiv.html( Math.round( response[ "currently" ][ "temperature" ] ) + "&#176;" );

  tempWrapper.append( imageRefreshDiv );
  tempWrapper.append( tempDiv );
  $( ".weather-info" ).html( tempWrapper );

  // Get the summary div
  $( ".weather-summary" ).html( response[ "currently" ][ "summary" ] );

  // Get the high-low div ( which is also being used with last updated )
  $( ".weather-high-low" ).html( "Last updated: <br/>" + response[ "currently" ][ "last_updated" ] );


};

var renderWeather = function () {

  var successCallback = function ( response ) {

    // var lat = response.coords.latitude;
    // var lng = response.coords.longitude;
    // var accuracy = response.coords.accuracy;
    var url = "/fetch_initial_weather"
    // console.log( lat, lng );
    $.ajax( {
      url: url,
      method: "GET",
      dataType: "JSON",
      data: {
        "lat": "-33.886225599999996",
        "lng": "151.1963853"
      },
      success: function( response ) {
        console.log( response );
        renderWeatherComponent( response );
      }
    } ).done( function () { console.log( "Weather request sent!" ) } );
  };

  var errorCallback = function ( error ) {
    console.log( "Fetching current location permission is disabled." );
    successCallback();
  };

  // Get the current location of the user
  navigator.geolocation.getCurrentPosition( successCallback, errorCallback );
};

var renderGreetings = function () {
  var date = new Date();
  var hours = date.getHours();

  if( hours <= 2 ) {
    var message = "Go to bed!";
    renderGreetingsComponent( message );
  } else if( hours > 2 && hours < 6 ) {
    var message = "Sleep tight!";
    renderGreetingsComponent( message );
  } else if( hours >= 6 && hours <= 8 ) {
    var message = "Hello Sunshine!";
    renderGreetingsComponent( message );
  } else if( hours > 8 && hours <= 10 ) {
    var message = "Morning Snoring!";
    renderGreetingsComponent( message );
  } else if( hours > 10 && hours < 12 ) {
    var message = "Good morning!";
    renderGreetingsComponent( message );
  } else if( hours >= 12 && hours < 14 ) {
    var message = "Good afternoon!";
    renderGreetingsComponent( message );
  } else if( hours >= 14 && hours < 17 ) {
    var message = "Afternoon matey!";
    renderGreetingsComponent( message );
  } else if( hours >= 17 && hours < 21 ) {
    var message = "Good evening!";
    renderGreetingsComponent( message );
  } else if( hours >= 21 && hours <= 24 ) {
    var message = "Beauty sleep time!";
    renderGreetingsComponent( message );
  }

};

var renderGreetingsComponent = function ( message ) {
  var greetingsContainer = $( "<p></p>" ).addClass( "greets" );
  greetingsContainer.html( message );

  $( ".greetings" ).append( greetingsContainer );
};

var renderQuote = function () {
  var url = "/fetch_quote";
  $.ajax( {
    url: url,
    method: "GET",
    dataType: "JSON",
    success: function ( response ) {
      // Render the quote!
      var quoteContainer = $( '<div></div>' ).addClass( "quotes" );
      var content = response.content;
      var author = $( "<p></p>" ).css( "text-align", "center" ).html( "~ " + response.author + " ~" );

      quoteContainer.append( content );
      quoteContainer.append( author );
      $( "#news-details" ).append( quoteContainer );
    }
  } );
};

var setPlaylistListener = function () {
  var playlists = $( ".playlist-album" );

  if( playlists.length > 0 ) {
    for( var i = 0; i < playlists.length; i++ ) {
      playlists.eq( i ).on( "click", function () {
        renderPlaylistView( $( this ) );
      } );
    }
  }
};

var renderPlaylistView = function( element ) {
  var playlistFrame = $( "<iframe></iframe>" );

  playlistFrame.attr( {
    "src": element.attr( "data-url" ),
    "width": "100%",
    "height": "100%",
    "frameborder": "0",
    "allowtransparency": "true"
  } );

  $( ".music" ).html( playlistFrame );
};

var renderInitialComponents = function () {
  renderGreetings();
  setPlaylistListener();
  renderWeather();
  setNewsFeedListener(); // Set event listener for news feed selection
};


$( document ).ready( function () {
  // Initialise
  renderInitialComponents();

} );
